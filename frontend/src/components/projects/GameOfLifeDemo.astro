---
import Heading from '../ui/Heading.astro';
import Text from '../ui/Text.astro';
import Button from '../ui/Button.astro';
---
<section class="gol-demo" aria-labelledby="gol-title">
  <div class="gol-demo__intro">
    <Heading id="gol-title" level={2} size="2xl">Interactive playground</Heading>
    <Text tone="muted">
      Draw patterns, step forwards or backwards, and record GIFs of the evolution. The simulation
      still runs entirely in Rust with wasm-bindgenâ€”now presented in the updated layout.
    </Text>
  </div>

  <div class="gol-demo__layout">
    <div class="gol-demo__canvas">
      <canvas id="lifeCanvas" width="400" height="400" aria-label="Game of Life grid"></canvas>
      <div class="gol-demo__stats">
        <span id="gridSizeDisplay">Grid: 20x20</span>
        <span id="liveCellsDisplay">Live cells: 0</span>
      </div>
    </div>

    <div class="gol-demo__controls">
      <article class="gol-card">
        <Heading level={3} size="lg">Simulation controls</Heading>
        <div class="gol-buttons">
          <Button id="stepBtn">Step Forward</Button>
          <Button id="backBtn" variant="secondary">Step Back</Button>
          <Button id="resetBtn" variant="secondary">Reset</Button>
          <Button id="multiStepBtn" variant="secondary">Multi-Step</Button>
          <Button id="recordBtn" variant="secondary">Record GIF</Button>
        </div>
        <div class="gol-input">
          <label for="speedRange">Speed</label>
          <input type="range" id="speedRange" min="50" max="1000" value="200" />
          <span id="delayDisplay">Frame Delay: 200ms</span>
        </div>
        <div class="gol-input">
          <label for="genInput">Generations</label>
          <input type="number" id="genInput" min="1" max="100" value="1" />
        </div>
      </article>

      <article class="gol-card">
        <Heading level={3} size="lg">Text-to-pattern tools</Heading>
        <div class="gol-input">
          <label for="textInput">Generate from text</label>
          <input type="text" id="textInput" placeholder="Enter text to convert" />
        </div>
        <div class="gol-input">
          <label for="bufferSizeSlider">Buffer Size</label>
          <input type="range" id="bufferSizeSlider" min="1" max="10" value="2" />
          <span id="bufferDisplay">2</span>
        </div>
        <Button id="generateTextBtn" variant="secondary">Generate</Button>
      </article>

      <article class="gol-card">
        <Heading level={3} size="lg">Import &amp; export</Heading>
        <div class="gol-file">
          <input type="file" id="fileInput" accept=".txt" hidden />
          <Button id="fileUploadBtn" variant="secondary">Upload Pattern</Button>
          <span id="fileName">No file selected</span>
        </div>
        <div id="dragDropArea" class="gol-drop" aria-label="Drag and drop area">
          Drag &amp; drop pattern files here
        </div>
        <Button id="downloadBtn" variant="secondary">Download Pattern</Button>
      </article>
    </div>
  </div>
</section>

<script type="module" is:inline>
  import { initGameOfLife } from '/legacy/javascript/game_of_life.js';

  initGameOfLife().catch((error) => {
    console.error('Failed to initialize Game of Life demo:', error);
  });
</script>

<style>
.gol-demo {
  display: grid;
  gap: var(--space-2xl);
}

.gol-demo__intro {
  display: grid;
  gap: var(--space-sm);
  max-width: 70ch;
}

.gol-demo__layout {
  display: grid;
  gap: var(--space-2xl);
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  align-items: start;
}

.gol-demo__canvas {
  background: var(--color-surface-100);
  border-radius: var(--radius-lg);
  padding: var(--space-lg);
  box-shadow: var(--shadow-sm);
  border: 1px solid rgba(17, 23, 42, 0.08);
  display: grid;
  gap: var(--space-md);
  justify-items: center;
}

.gol-demo__canvas canvas {
  width: 100%;
  height: auto;
  max-width: 540px;
  border-radius: var(--radius-sm);
  border: 1px solid rgba(17, 23, 42, 0.12);
  background: var(--color-surface-100);
}

.gol-demo__stats {
  display: flex;
  gap: var(--space-sm);
  font-size: var(--font-size-sm);
  color: var(--color-neutral-500);
}

.gol-demo__controls {
  display: grid;
  gap: var(--space-xl);
}

.gol-card {
  background: var(--color-surface-100);
  border-radius: var(--radius-lg);
  padding: var(--space-xl);
  box-shadow: var(--shadow-sm);
  border: 1px solid rgba(17, 23, 42, 0.08);
  display: grid;
  gap: var(--space-md);
}

.gol-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-sm);
}

.gol-input {
  display: grid;
  gap: var(--space-2xs);
}

.gol-input label {
  font-size: var(--font-size-sm);
  font-weight: 600;
  color: var(--color-neutral-500);
}

.gol-input input[type='range'] {
  width: 100%;
}

.gol-file {
  display: grid;
  gap: var(--space-xs);
}

.gol-file span {
  font-size: var(--font-size-sm);
  color: var(--color-neutral-500);
}

.gol-drop {
  border: 1px dashed rgba(17, 23, 42, 0.2);
  border-radius: var(--radius-md);
  padding: var(--space-lg);
  text-align: center;
  font-size: var(--font-size-sm);
  color: var(--color-neutral-500);
}

html[data-theme='dark'] .gol-demo__canvas,
html[data-theme='dark'] .gol-card {
  background: var(--color-surface-200);
  border: 1px solid rgba(120, 132, 182, 0.35);
}

html[data-theme='dark'] .gol-demo__canvas canvas {
  border: 1px solid rgba(120, 132, 182, 0.35);
  background: var(--color-surface-100);
}

html[data-theme='dark'] .gol-drop {
  border-color: rgba(120, 132, 182, 0.35);
  color: var(--color-neutral-500);
}

html[data-theme='dark'] .gol-demo__stats {
  color: var(--color-neutral-500);
}
</style>
