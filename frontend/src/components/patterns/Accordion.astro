---
export interface Props {
  title: string;
  number?: number | string;
  open?: boolean;
  class?: string;
}

const props = Astro.props as Props & { [key: string]: unknown };

const {
  title,
  number,
  open = false,
  class: className = '',
  ...rest
} = props;
---
<details class={`accordion ${className}`.trim()} open={open} {...rest}>
  <summary class="accordion__summary">
    {typeof number !== 'undefined' && <span class="accordion__number">{number}</span>}
    <span class="accordion__title">{title}</span>
    <span class="accordion__icon" aria-hidden="true">
      <svg viewBox="0 0 16 16" focusable="false" aria-hidden="true">
        <path d="M3.2 5.6 8 10.4l4.8-4.8" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6" />
      </svg>
    </span>
  </summary>
  <div class="accordion__content">
    <slot />
  </div>
</details>

<style>
.accordion {
  border: 1px solid rgba(17, 23, 42, 0.08);
  border-radius: var(--radius-md, 12px);
  background: var(--color-surface-100, #fff);
  overflow: hidden;
  transition: border 180ms ease, box-shadow 180ms ease;
}

.accordion[open] {
  border-color: color-mix(in srgb, var(--color-primary-500, #3b4eff) 28%, transparent);
  box-shadow: var(--shadow-xs, 0 1px 2px rgba(15, 23, 42, 0.08));
}

.accordion__summary {
  list-style: none;
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  gap: var(--space-sm, 0.75rem);
  padding: var(--space-md, 1rem) var(--space-lg, 1.5rem);
  cursor: pointer;
  font-weight: 600;
}

.accordion__summary::-webkit-details-marker {
  display: none;
}

.accordion__number {
  width: 2.25rem;
  height: 2.25rem;
  border-radius: 999px;
  display: grid;
  place-items: center;
  background: color-mix(in srgb, var(--color-primary-500, #3b4eff) 18%, transparent);
  font-size: var(--font-size-sm, 0.875rem);
  font-weight: 700;
}

.accordion__title {
  font-size: var(--font-size-lg, 1.25rem);
}

.accordion__icon {
  display: inline-flex;
  width: 1.5rem;
  height: 1.5rem;
  color: var(--color-neutral-400, #6b748b);
  transition: transform 180ms ease;
}

.accordion[open] .accordion__icon {
  transform: rotate(180deg);
}

.accordion__content {
  padding: 0 var(--space-lg, 1.5rem) var(--space-lg, 1.5rem);
  display: grid;
  gap: var(--space-md, 1rem);
}

html[data-theme='dark'] .accordion {
  background: var(--color-surface-200, #0b152d);
  border: 1px solid rgba(120, 132, 182, 0.32);
}

html[data-theme='dark'] .accordion[open] {
  border-color: color-mix(in srgb, var(--color-primary-500, #7688ff) 40%, transparent);
}

html[data-theme='dark'] .accordion__number {
  background: color-mix(in srgb, var(--color-primary-500, #7688ff) 30%, transparent);
}

html[data-theme='dark'] .accordion__icon {
  color: var(--color-neutral-400, #7f8bb8);
}
</style>
