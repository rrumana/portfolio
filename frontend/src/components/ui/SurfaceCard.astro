---
export interface Props {
  as?: keyof HTMLElementTagNameMap;
  variant?: 'solid' | 'ghost' | 'outline';
  padding?: 'none' | 'sm' | 'md' | 'lg';
  class?: string;
  [key: string]: unknown;
}

const props = Astro.props as Props;

const {
  as = 'article',
  variant = 'solid',
  padding = 'md',
  class: className = '',
  ...rest
} = props;

const Tag = as as keyof HTMLElementTagNameMap;
---
<Tag class={`surface-card surface-card--${variant} surface-card--pad-${padding} ${className}`.trim()} {...rest}>
  <slot />
</Tag>

<style>
.surface-card {
  border-radius: var(--radius-lg, 18px);
  border: 1px solid rgba(17, 23, 42, 0.08);
  background: var(--color-surface-100, #ffffff);
  box-shadow: var(--shadow-sm, 0 4px 12px rgba(15, 23, 42, 0.08));
  display: grid;
  gap: var(--space-md, 1rem);
  transition: border 180ms ease, box-shadow 180ms ease, background 180ms ease;
}

.surface-card--ghost {
  background: color-mix(in srgb, var(--color-surface-200, #f3f6ff) 55%, transparent);
  border: 1px solid rgba(17, 23, 42, 0.05);
  box-shadow: none;
}

.surface-card--outline {
  background: transparent;
  border: 1px dashed rgba(17, 23, 42, 0.25);
  box-shadow: none;
}

.surface-card--pad-none {
  padding: 0;
}

.surface-card--pad-sm {
  padding: var(--space-sm, 0.75rem);
}

.surface-card--pad-md {
  padding: var(--space-lg, 1.5rem);
}

.surface-card--pad-lg {
  padding: clamp(1.75rem, 2.2vw, 2.5rem);
}

html[data-theme='dark'] .surface-card {
  background: var(--color-surface-200, #0b152d);
  border: 1px solid rgba(120, 132, 182, 0.32);
  box-shadow: none;
}

html[data-theme='dark'] .surface-card--ghost {
  background: color-mix(in srgb, var(--color-surface-300, #14203c) 65%, transparent);
  border: 1px solid rgba(120, 132, 182, 0.25);
}

html[data-theme='dark'] .surface-card--outline {
  border-color: rgba(120, 132, 182, 0.4);
}
</style>
